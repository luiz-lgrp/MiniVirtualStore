// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace TestingCRUD.Infra.Migrations;

[DbContext(typeof(Context))]
partial class CustomerContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "7.0.5")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("TestingCRUD.Domain.Models.Customer", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Cpf")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Phone")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<DateTime>("Updated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Customers");
            });

        modelBuilder.Entity("TestingCRUD.Domain.Models.Order", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Cpf")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("OrderCode")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<decimal>("TotalValue")
                    .HasColumnType("decimal(18,2)");

                b.Property<DateTime>("Updated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Orders");
            });

        modelBuilder.Entity("TestingCRUD.Domain.Models.OrderItem", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<string>("OrderCode")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid?>("OrderId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("ProductId")
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Quantity")
                    .HasColumnType("int");

                b.Property<decimal>("UnitValue")
                    .HasColumnType("decimal(18,2)");

                b.Property<DateTime>("Updated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.HasIndex("OrderId");

                b.ToTable("OrderItems");
            });

        modelBuilder.Entity("TestingCRUD.Domain.Models.Product", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Created")
                    .HasColumnType("datetime2");

                b.Property<decimal>("Price")
                    .HasColumnType("decimal(18,2)");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Status")
                    .HasColumnType("int");

                b.Property<int>("Stock")
                    .HasColumnType("int");

                b.Property<DateTime>("Updated")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Products");
            });

        modelBuilder.Entity("TestingCRUD.Domain.Models.OrderItem", b =>
            {
                b.HasOne("TestingCRUD.Domain.Models.Order", "Order")
                    .WithMany("OrderItems")
                    .HasForeignKey("OrderId");

                b.Navigation("Order");
            });

        modelBuilder.Entity("TestingCRUD.Domain.Models.Order", b =>
            {
                b.Navigation("OrderItems");
            });
#pragma warning restore 612, 618
    }
}
